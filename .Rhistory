BH <- sum(p.adjust(pvals, method = "BH") <= alpha)
BH
BON
setwd("U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-2/Data")
library(OPWeight)
library(OPWpaper)
library(empOPW)
library(MASS)
library(qvalue)
library(limma)
library(splines)
library(DESeq2)
library(mvnfast)		# fast generate multi variate normal
library("IHW")		# independent hypothesis weight
library(ggplot2)
library(reshape2)
library(cowplot)
library(tibble)
x = 1:10
z=(x-mean(x))/sd(x)
z
(z-mean(z))/sd(z)
data_analysis <- function(alpha, pvalue, filters, N_current, N_prior, tail,
maxgroup, effectType = c("continuous", "binary"))
{
sigma <- sqrt(N_current/N_prior)
zscores <- (filters - mean(filters, na.rm = TRUE))/sd(filters, na.rm = TRUE)
dbn_wgt <- bayes_weights(mu = zscores, sigma = sigma, q = alpha/m)$w
# FWER cotrols-------
pro_bon <- empOPW(pvalue = pvalue, filter = filters, alpha = alpha,
tail = tail, max.group = maxgroup,
effectType = effectType, method = "BON")
bon <- sum(pvalue <= alpha/length(pvalue))
dbn_bon <- sum(pvalue <= alpha*dbn_wgt/m, na.rm = TRUE)
ihw_bon <- ihw(pvalue, filters, alpha = alpha, adjustment_type = "bonferroni")
# FDR controls-------
pro_bh <- empOPW(pvalue = pvalue, filter = filters, alpha = alpha,
tail = tail, max.group = maxgroup,
effectType = effectType, method = "BH")
bh <- sum(p.adjust(pvalue, method = "BH") <= alpha)
dbn_bh <- sum(p.adjust(pvalue/dbn_wgt, method = "BH") <= alpha, na.rm = TRUE)
ihw_bh <- ihw(pvalue, filters, alpha = alpha)
return(c(pro_bon, bon, dbn_bon, ihw_bon, pro_bh, bh, dbn_bh, ihw_bh))
}
library(readr)
TG_ONE_Eur_tbl <- read_delim("TG_ONE_Eur.tbl.sorted","\t", escape_double = FALSE, trim_ws = TRUE)
pgc_scz_full_2012_04 <- read.table("pgc.scz.full.2012-04.txt", h = TRUE)
alpha = .1
pvalue = pvals
filters = filters
commonSnp <- intersect(TG_ONE_Eur_tbl$MarkerName, pgc_scz_full_2012_04$snpid)
filter_pvals <- TG_ONE_Eur_tbl$GC.Pvalue[pmatch(commonSnp, TG_ONE_Eur_tbl$MarkerName)]
pvals <- pgc_scz_full_2012_04$pval[pmatch(commonSnp, pgc_scz_full_2012_04$snpid)]
filters <- qnorm(filter_pvals/2, lower.tail = FALSE)
pvalue = pvals
filters = filters
N_current = length(pvals)
N_prior = length(filters)
tail = 2
maxgroup = 100
effectType = "continuous"
m = length(pvalue)
m
N_current = m
N_prior = length(filters)
N_prior
N_current = dim(pgc_scz_full_2012_04)[1]
N_prior = dim(TG_ONE_Eur_tbl)[1]
N_current
N_prior
m = length(pvlaue)
m = length(pvalue)
m
sigma <- sqrt(N_current/N_prior)
sigma
z_prior<- (filters - mean(filters, na.rm = TRUE))/sd(filters, na.rm = TRUE)
mu <- sqrt(N_current/N_prior)*z_prior
dbn_wgt <- bayes_weights(mu = mu, sigma = sigma, q = alpha/m)$w
library(pweight)
library(readr)
dbn_wgt <- bayes_weights(mu = mu, sigma = sigma, q = alpha/m)$w
dbn_wgt
pro_bon <- empOPW(pvalue = pvalue, filter = filters, alpha = alpha,
tail = tail, max.group = maxgroup,
effectType = effectType, method = "BON")
bon <- sum(pvalue <= alpha/length(pvalue))
dbn_bon <- sum(pvalue <= alpha*dbn_wgt/m, na.rm = TRUE)
ihw_bon <- ihw(pvalue, filters, alpha = alpha, adjustment_type = "bonferroni")
pro_bh <- empOPW(pvalue = pvalue, filter = filters, alpha = alpha,
tail = tail, max.group = maxgroup,
effectType = effectType, method = "BH")
bh <- sum(p.adjust(pvalue, method = "BH") <= alpha)
dbn_bh <- sum(p.adjust(pvalue/dbn_wgt, method = "BH") <= alpha, na.rm = TRUE)
ihw_bh <- ihw(pvalue, filters, alpha = alpha)
c(pro_bon, bon, dbn_bon, ihw_bon, pro_bh, bh, dbn_bh, ihw_bh)
data_analysis <- function(alpha, pvalue, filters, N_current, N_prior, tail,
maxgroup, effectType = c("continuous", "binary"))
{
m = length(pvalue)
sigma <- sqrt(N_current/N_prior)
z_prior<- (filters - mean(filters, na.rm = TRUE))/sd(filters, na.rm = TRUE)
mu <- sqrt(N_current/N_prior)*z_prior
dbn_wgt <- bayes_weights(mu = mu, sigma = sigma, q = alpha/m)$w
# FWER cotrols-------
pro_bon <- empOPW(pvalue = pvalue, filter = filters, alpha = alpha,
tail = tail, max.group = maxgroup,
effectType = effectType, method = "BON")$rejections
bon <- sum(pvalue <= alpha/length(pvalue))
dbn_bon <- sum(pvalue <= alpha*dbn_wgt/m, na.rm = TRUE)
ihw_bon <- rejections(ihw(pvalue, filters, alpha = alpha,
adjustment_type = "bonferroni"))
# FDR controls-------
pro_bh <- empOPW(pvalue = pvalue, filter = filters, alpha = alpha,
tail = tail, max.group = maxgroup,
effectType = effectType, method = "BH")$rejections
bh <- sum(p.adjust(pvalue, method = "BH") <= alpha)
dbn_bh <- sum(p.adjust(pvalue/dbn_wgt, method = "BH") <= alpha, na.rm = TRUE)
ihw_bh <- rejections(ihw(pvalue, filters, alpha = alpha))
return(c(pro_bon, bon, dbn_bon, ihw_bon, pro_bh, bh, dbn_bh, ihw_bh))
}
data_analysis(alpha = .1, pvalue = pvals, filters = filters,
N_current = dim(pgc_scz_full_2012_04)[1],
N_prior = dim(TG_ONE_Eur_tbl)[1], tail = 2,
maxgroup = 100, effectType = "continuous")
rm(data_analysis())
rm(data_analysis)
library(empOPW)
data_analysis()
data_analysis
alphaVec <- seq(.05, .1, .02)
alphaVec
alphaVec <- seq(.05, .1, .01)
alphaVec
alphaVec <- seq(.05, .1, length.out = 5)
alphaVec
alphaVec <- seq(.05, .1, length.out = 5)
Lipid-SCZ_results <- sapply(alphaVec, data_analysis, pvalue = pvals, filter = filters,
N_current = dim(pgc_scz_full_2012_04)[1], N_prior = dim(TG_ONE_Eur_tbl)[1],
tail = 2, max.group = 100, effectType = "continuous")
Lipid-SCZ_results
Lipid-SCZ_result
Lipid-SCZ_results
Lipid-SCZ_results
Lipid-SCZ_results <- sapply(.1, data_analysis, pvalue = pvals, filter = filters,
N_current = dim(pgc_scz_full_2012_04)[1], N_prior = dim(TG_ONE_Eur_tbl)[1],
tail = 2, max.group = 100, effectType = "continuous")
rm(list=ls())
m = 10000
X = runif(m, min = 0, max = 2.5)               # covariate
H = rbinom(length(X), size = 1, prob = 0.1)   # hypothesis true or false
Z = rnorm(length(X), mean = H * X)            # Z-score
p = 1 - pnorm(Z)
rejections <- data_analysis(alpha = .1, pvalue = p, filter = X, N_current = m,
N_prior = m, tail = 2, max.group = 10, effectType = "continuous")
rejections
bottomly_count_table <- read.table("bottomly_count_table.txt",h=T)
bottomly_phenodata <- read.table("bottomly_phenodata.txt",h=T)
countData <- as.matrix(bottomly_count_table[,-1])		# counts
condition <- factor(bottomly_phenodata[,3])				# strain as factor
dds <- DESeqDataSetFromMatrix(countData, DataFrame(condition), ~ condition)
dds <- DESeq(dds)
bottomly <- results(dds)
colnames(bottomly)
library(DESeq)
library(DESeq2)
dds <- DESeqDataSetFromMatrix(countData, DataFrame(condition), ~ condition)
install.packages("checkmate")
dds <- DESeqDataSetFromMatrix(countData, DataFrame(condition), ~ condition)
library(DESeq2)
dds <- DESeqDataSetFromMatrix(countData, DataFrame(condition), ~ condition)
dds <- DESeq(dds)
bottomly <- results(dds)
colnames(bottomly)
pvals = bottomly$pvalue
filters = bottomly$baseMean
m = length(pvals)
alphaVec <- seq(.05, .1, length.out = 5)
bottomly_results <- sapply(alphaVec, data_analysis, pvalue = pvals, filter = filters,
N_current = m, N_prior = m,
tail = 2, max.group = 100, effectType = "continuous")
bottomly_results
pvalue = pvals
filter = filters
N_current = m
N_prior = m
tail = 2
max.group = 100
effectType = "continuous"
m = length(pvalue)
sigma <- sqrt(N_current/N_prior)
z_prior<- (filter - mean(filter, na.rm = TRUE))/sd(filter, na.rm = TRUE)
mu <- sqrt(N_current/N_prior)*z_prior
dbn_wgt <- bayes_weights(mu = mu, sigma = sigma, q = alpha/m)$w
alpha=.05
dbn_wgt <- bayes_weights(mu = mu, sigma = sigma, q = alpha/m)$w
pro_bon <- empOPW(pvalue = pvalue, filter = filter, alpha = alpha,
tail = tail, max.group = max.group,
effectType = effectType, method = "BON")$rejections
pro_bon
bon <- sum(pvalue <= alpha/length(pvalue))
bon
bon <- sum(pvalue <= alpha/length(pvalue), na.rm = TRUE)
bon
dbn_bon <- sum(pvalue <= alpha*dbn_wgt/m, na.rm = TRUE)
dbn_bon
dbn_bon
ihw_bon <- rejections(ihw(pvalue, filter, alpha = alpha,
adjustment_type = "bonferroni"))
ihw_bon
pro_bh <- empOPW(pvalue = pvalue, filter = filter, alpha = alpha,
tail = tail, max.group = max.group,
effectType = effectType, method = "BH")$rejections
pro_bh
bh <- sum(p.adjust(pvalue, method = "BH") <= alpha)
bh
bh <- sum(p.adjust(pvalue, method = "BH") <= alpha, na.rm = TRUE)
bh
dbn_bh <- sum(p.adjust(pvalue/dbn_wgt, method = "BH") <= alpha, na.rm = TRUE)
ihw_bh <- rejections(ihw(pvalue, filter, alpha = alpha))
dbn_bh
ihw_bh
library(empOPW)
alphaVec <- seq(.05, .1, length.out = 5)
bottomly_results <- sapply(alphaVec, data_analysis, pvalue = pvals, filter = filters,
N_current = m, N_prior = m,
tail = 2, max.group = 100, effectType = "continuous")
bottomly_results
rejections=bottomly_results
rownames(rejections) <- c('pro_bon', 'bon', 'dbn_bon', 'ihw_bon',
'pro_bh', 'bh', 'dbn_bh', 'ihw_bh')
rejections
colnames(rejections) <- paste("alpha", seq(.05, .1, length = 5))
rejections
colnames(rejections) <- paste0("alpha", seq(.05, .1, length = 5))
rejections
library(empOPW)
?sapply
data_analysis
library(empOPW)
alphaVec <- seq(.05, .1, length.out = 2)
bottomly_results <- sapply(alphaVec, data_analysis, pvalue = pvals, filter = filters,
N_current = m, N_prior = m,
tail = 2, max.group = 100, effectType = "continuous")
bottomly_results
bottomly_results <- sapply(alphaVec, data_analysis, pvalue = pvals, filter = filters,
N_current = m, N_prior = m,
tail = 2, max.group = 100, effectType = "continuous", simplify = FALSE)
bottomly_results
bottomly_results <- sapply(alphaVec, data_analysis, pvalue = pvals, filter = filters,
N_current = m, N_prior = m,
tail = 2, max.group = 100, effectType = "continuous", USE.NAMES = FALSE)
bottomly_results
alphaVec <- seq(.05, .1, length.out = 5)
bottomly_results <- sapply(alphaVec, data_analysis, pvalue = pvals, filter = filters,
N_current = m, N_prior = m,
tail = 2, max.group = 100, effectType = "continuous")
library(empOPW)
bottomly_results
proteomics_file <- system.file("extdata/real_data","science_signaling.csv",
package = "IHWpaper")
proteomics_df <- read.csv(proteomics_file, stringsAsFactors = F)
proteomics_df$pvalue <- rank(proteomics_df$p1, ties.method="first")*proteomics_df$p1/nrow(proteomics_df)
proteomics_df$test = qnorm(proteomics_df$pvalue, lower.tail = F)
names(proteomics_df)
pvals = proteomics_df$pvalue
filters = proteomics_df$X..peptides
m = length(pvals)
alphaVec <- seq(.05, .1, length.out = 5)
proteomics_results <- sapply(alphaVec, data_analysis, pvalue = pvals, filter = filters,
N_current = m, N_prior = m,
tail = 2, max.group = 100, effectType = "continuous")
proteomics_results <- sapply(alphaVec, data_analysis, pvalue = pvals, filter = filters,
N_current = m, N_prior = m,
tail = 2, max.group = 10, effectType = "continuous")
proteomics_results
rm(list=ls())
load(system.file("extdata/real_data", "hammer_eset.RData", package = "IHWpaper"),
envir=environment())
countData <- exprs(hammer.eset)
colData <- pData(hammer.eset)
dds <- DESeqDataSetFromMatrix(countData = countData, colData = colData , design = ~protocol)
dds <- dds[, dds$Time == "2 months"]
dds <- DESeq(dds)
de_res_ham <- results(dds)
colnames(de_res_ham)
dim(de_res_ham)
filters = de_res_ham$baseMean
pvals <- de_res_ham$pvalue
m = length(pvals)
alphaVec <- seq(.05, .1, length.out = 5)
hammer_results <- sapply(alphaVec, data_analysis, pvalue = pvals, filter = filters,
N_current = m, N_prior = m,
tail = 2, max.group = 100, effectType = "continuous")
hammer_results
rm(list=ls())
library("pasilla")
data("pasillaGenes", package="pasilla")
countData <- counts(pasillaGenes)
colData <- pData(pasillaGenes)[,c("condition","type")]
dds <- DESeqDataSetFromMatrix(countData = countData,
colData = colData,
design = ~ condition)
dds <- DESeqDataSet(se = pasillaGenes, design = ~ cell + dex)
dds <- DESeqDataSet(se = pasillaGenes, design = ~ cell + dex)
dds <- DESeqDataSetFromMatrix(countData = countData,
colData = colData,
design = ~ condition)
de_res_pas <- results(dds)
colnames(de_res_pas)
dim(de_res_pas)
dds <- DESeq(dds)
colData <- pData(pasillaGenes)[,c("condition","type")]
dds <- DESeqDataSetFromMatrix(countData = countData,
colData = colData,
design = ~ condition)
dds <- DESeq(dds)
de_res_pas <- results(dds)
colnames(de_res_pas)
dim(de_res_pas)
filters = de_res_pas$baseMean
pvals <- de_res_pas$pvalue
m = length(pvals)
alphaVec <- seq(.05, .1, length.out = 5)
pasilla_results <- sapply(alphaVec, data_analysis, pvalue = pvals, filter = filters,
N_current = m, N_prior = m,
tail = 2, max.group = 100, effectType = "continuous")
pasilla_results
rm(list=ls())
data("airway", package = "airway")
dds <- DESeqDataSet(se = airway, design = ~ cell + dex)
dds <- DESeq(dds)
de_res_air <- results(dds)
colnames(de_res_air)
dim(de_res_air)
filters = de_res_air$baseMean
pvals <- de_res_air$pvalue
m = length(pvals)
alphaVec <- seq(.05, .1, length.out = 5)
airway_results <- sapply(alphaVec, data_analysis, pvalue = pvals, filter = filters,
N_current = m, N_prior = m,
tail = 2, max.group = 100, effectType = "continuous")
airway_results
library(empOPW)
qnorm(2)
qnorm(.05)
qnorm(1-.05)
library(pweight)
?bayes_weights
data_analysis <- function(alpha, pvalue, filter, N_current, N_prior, tail,
max.group, effectType = c("continuous", "binary"))
{
m = length(pvalue)
sigma <- sqrt(N_current/N_prior)
z_prior<- (filter - mean(filter, na.rm = TRUE))/sd(filter, na.rm = TRUE)
mu <- sqrt(N_current/N_prior)*z_prior
dbn_wgt <- bayes_weights(mu = -mu, sigma = sigma, q = alpha/m)$w
# FWER cotrols-------
pro_bon <- empOPW(pvalue = pvalue, filter = filter, alpha = alpha,
tail = tail, max.group = max.group,
effectType = effectType, method = "BON")$rejections
bon <- sum(pvalue <= alpha/length(pvalue))
dbn_bon <- sum(pvalue <= alpha*dbn_wgt/m, na.rm = TRUE)
ihw_bon <- rejections(ihw(pvalue, filter, alpha = alpha,
adjustment_type = "bonferroni"))
# FDR controls-------
pro_bh <- empOPW(pvalue = pvalue, filter = filter, alpha = alpha,
tail = tail, max.group = max.group,
effectType = effectType, method = "BH")$rejections
bh <- sum(p.adjust(pvalue, method = "BH") <= alpha)
dbn_bh <- sum(p.adjust(pvalue/dbn_wgt, method = "BH") <= alpha, na.rm = TRUE)
ihw_bh <- rejections(ihw(pvalue, filter, alpha = alpha))
rejections <- c(pro_bon, bon, dbn_bon, ihw_bon, pro_bh, bh, dbn_bh, ihw_bh)
return(rejections)
}
# data processing
#-------------------------
bottomly_count_table <- read.table("bottomly_count_table.txt",h=T)
bottomly_phenodata <- read.table("bottomly_phenodata.txt",h=T)
countData <- as.matrix(bottomly_count_table[,-1])		# counts
condition <- factor(bottomly_phenodata[,3])				# strain as factor
dds <- DESeqDataSetFromMatrix(countData, DataFrame(condition), ~ condition)
dds <- DESeq(dds)
bottomly <- results(dds)
colnames(bottomly)
pvals = bottomly$pvalue
filters = bottomly$baseMean
m = length(pvals)
alphaVec <- seq(.05, .1, length.out = 5)
bottomly_results <- sapply(alphaVec, data_analysis, pvalue = pvals, filter = filters,
N_current = m, N_prior = m,
tail = 2, max.group = 100, effectType = "continuous")
bottomly_count_table <- read.table("bottomly_count_table.txt",h=T)
setwd("U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-2/Data")
library(OPWeight)
library(OPWpaper)
library(empOPW)
library(MASS)
library(qvalue)
library(limma)
library(splines)
library(DESeq2)
#install.packages("mvnfast")
library(mvnfast)		# fast generate multi variate normal
#source("https://bioconductor.org/biocLite.R")
#biocLite("IHW")
library("IHW")		# independent hypothesis weight
library(ggplot2)
library(reshape2)
library(cowplot)
library(tibble)
library(pweight)
library(readr)
library(DESeq)
library(DESeq2)
bottomly_count_table <- read.table("bottomly_count_table.txt",h=T)
bottomly_phenodata <- read.table("bottomly_phenodata.txt",h=T)
countData <- as.matrix(bottomly_count_table[,-1])		# counts
condition <- factor(bottomly_phenodata[,3])				# strain as factor
dds <- DESeqDataSetFromMatrix(countData, DataFrame(condition), ~ condition)
dds <- DESeq(dds)
bottomly <- results(dds)
colnames(bottomly)
pvals = bottomly$pvalue
filters = bottomly$baseMean
m = length(pvals)
alphaVec <- seq(.05, .1, length.out = 5)
data_analysis
bottomly_results <- sapply(alphaVec, data_analysis, pvalue = pvals, filter = filters,
N_current = m, N_prior = m,
tail = 2, max.group = 100, effectType = "continuous")
bottomly_results
data_analysis <- function(alpha, pvalue, filter, N_current, N_prior, tail,
max.group, effectType = c("continuous", "binary"))
{
m = length(pvalue)
sigma <- sqrt(N_current/N_prior)
z_prior<- (filter - mean(filter, na.rm = TRUE))/sd(filter, na.rm = TRUE)
mu <- sqrt(N_current/N_prior)*z_prior
dbn_wgt <- bayes_weights(mu = -mu, sigma = sigma, q = alpha/m)$w
# FWER cotrols-------
pro_bon <- empOPW(pvalue = pvalue, filter = filter, alpha = alpha,
tail = tail, max.group = max.group,
effectType = effectType, method = "BON")$rejections
bon <- sum(pvalue <= alpha/length(pvalue), na.rm = TRUE)
dbn_bon <- sum(pvalue <= alpha*dbn_wgt/m, na.rm = TRUE)
ihw_bon <- rejections(ihw(pvalue, filter, alpha = alpha,
adjustment_type = "bonferroni"))
# FDR controls-------
pro_bh <- empOPW(pvalue = pvalue, filter = filter, alpha = alpha,
tail = tail, max.group = max.group,
effectType = effectType, method = "BH")$rejections
bh <- sum(p.adjust(pvalue, method = "BH") <= alpha, na.rm = TRUE)
dbn_bh <- sum(p.adjust(pvalue/dbn_wgt, method = "BH") <= alpha, na.rm = TRUE)
ihw_bh <- rejections(ihw(pvalue, filter, alpha = alpha))
# results-----
rejections <- c(pro_bon, bon, dbn_bon, ihw_bon, pro_bh, bh, dbn_bh, ihw_bh)
return(rejections)
}
data_analysis
library(empOPW)
m = 10000
X = runif(m, min = 0, max = 2.5)               # covariate
H = rbinom(length(X), size = 1, prob = 0.1)   # hypothesis true or false
Z = rnorm(length(X), mean = H * X)            # Z-score
p = 1 - pnorm(Z)
rejections <- data_analysis(alpha = .1, pvalue = p, filter = X, N_current = m,
N_prior = m, tail = 2, max.group = 10, effectType = "continuous")
rejections
library(readr)
ddu139supp_data_file <- read_delim("U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-2/Data/ddu139supp_data_file.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(ddu139supp_data_file)
90Plus <- read_delim("ddu139supp_data_file.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
N90Plus <- read_delim("ddu139supp_data_file.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(readr)
C4D_CAD_DISCOVERY_METAANALYSIS_UPDATE <- read_delim("U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-2/Data/C4D_CAD_DISCOVERY_METAANALYSIS_UPDATE.TXT",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(C4D_CAD_DISCOVERY_METAANALYSIS_UPDATE)
C4D <- read_delim("C4D_CAD_DISCOVERY_METAANALYSIS_UPDATE.TXT",
"\t", escape_double = FALSE, trim_ws = TRUE)
N_prior = 5406+16121     # N90Plus is prior data from the paper
commonSnp <- intersect(N90Plus$SNP, C4D$SNP)
length(commonSnp)
commonSnp <- intersect(C4D$SNP, N90Plus$SNP)
filter_pvals <- C4D$PVALUE[pmatch(commonSnp, C4D$SNP)]
pvals <- N90Plus$Pvalue_90[pmatch(commonSnp, N90Plus$SNP)]
filters <- qnorm(filter_pvals/2, lower.tail = FALSE)
m = length(pvals)
N_N90Plus = rep(5406 + 16121, m)     # this number is from the paper
N_N90Plus
N_C4D <- (C4D$N_CASE + C4D$N_CONTROL)[pmatch(commonSnp, C4D$SNP)]
N_C4D
length(N_C4D)
length(commonSnp)
library(readr)
CARDIoGRAM_GWAS_RESULTS <- read_delim("U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-2/Data/CARDIoGRAM_GWAS_RESULTS.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(CARDIoGRAM_GWAS_RESULTS)
Cardiogram <- read_delim("CARDIoGRAM_GWAS_RESULTS.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
commonSnp <- intersect(C4D$SNP, Cardiogram$SNP)
filter_pvals <- C4D$PVALUE[pmatch(commonSnp, C4D$SNP)]
pvals <- Cardiogram$pvalue[pmatch(commonSnp, Cardiogram$SNP)]
filters <- qnorm(filter_pvals/2, lower.tail = FALSE)
m = length(pvals)
N_Cardiogram <- (Cardiogram$N_case + Cardiogram$N_control)[pmatch(commonSnp, Cardiogram$SNP)]
N_C4D <- (C4D$N_CASE + C4D$N_CONTROL)[pmatch(commonSnp, C4D$SNP)]
data_analysis
library(empOPW)
data_analysis
